#!/bin/bash

# Create directory for pokemon data
mkdir -p pokemon_data

# Pokémon list and API URL
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
api_url="https://pokeapi.co/api/v2/pokemon"

# Function to fetch with retries
fetch_pokemon() {
    local pokemon=$1
    local retries=3
    local delay=1
    
    for (( i=1; i<=retries; i++ )); do
        if curl -s -o "pokemon_data/${pokemon}.json" "${api_url}/${pokemon}"; then
            echo "✅ $pokemon fetched successfully"
            return 0
        fi
        sleep $delay
        delay=$((delay * 2))
    done
    echo "❌ Failed to fetch $pokemon after $retries attempts" >> errors.txt
    return 1
}

# Initialize process tracking
declare -a pids
max_parallel=3


# Main execution with process control
(
for pokemon in "${pokemon_list[@]}"; do
    # Wait if we've reached max parallel processes
    while [ ${#pids[@]} -ge $max_parallel ]; do
        # Check for completed processes
        for i in "${!pids[@]}"; do
            if ! ps -p "${pids[i]}" > /dev/null 2>&1; then
                unset pids[i]
            fi
        done
        sleep 0.1
    done

    # Start new fetch
    fetch_pokemon "$pokemon" &
    pids+=($!)
    echo "🚀 Started fetching $pokemon (PID: $!)"
done

# Wait for remaining processes
for pid in "${pids[@]}"; do
    wait "$pid"

done
)

echo "All done! Results in pokemon_data/"